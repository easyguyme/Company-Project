## Auto select a input or textarea content
define ['core/coreModule'], (mod) ->

  mod.directive 'wmQuarterPicker', [
    ->
      return (
        restrict: 'A'
        replace: true
        scope:
          maxYear: '@'
          ngModel: '='
          changeHandler: '&'
        template: '<div class="quarter-picker-wrapper form-inline">
                    <input onkeydown="return false;" class="form-control quarter-picker-value" ng-click="togglePicker()" value="{{quarterVal|translate:\'{year:ngModel.year}\'}}" type="text"/>
                    <span class="quarter-picker-icon glyphicon glyphicon-calendar"></span>
                    <div class="bootstrap-datetimepicker-widget quarter-picker" ng-show="pickerShown">
                      <table class="table-condensed">
                        <thead>
                            <tr>
                                <th class="prev" ng-click="changeYear(-1)">‹</th>
                                <th colspan="5" class="picker-switch">{{ngModel.year}}</th>
                                <th class="next" ng-class="{disabled:nextBtnDisabled}" ng-click="changeYear(1)">›</th>
                            </tr>
                            <tr style="display:none;"></tr>
                        </thead>
                        <tbody class="quarter-items">
                          <tr ng-repeat="quarter in quarters" ng-click="selectQuarter($index+1)">
                            <td colspan="7" class="quarter-item" ng-class="{disabled:quarterBtnDisabled[$index]}" translate="{{quarter}}"></td>
                          </tr>
                        </tbody>
                      </table>
                    </div>
                  </div>'
        link: (scope, elem, attrs) ->
          TEXT_NODE_TYPE = 3
          QUARTER_PICKER_SELECTOR = '.quarter-picker'
          curYear = new Date().getFullYear()
          maxYear = scope.maxYear or curYear
          $elem = $(elem)
          $quarterPickerWidget =  $elem.find('input')
          $quarterPickerWidget.css 'cursor', 'pointer'
          scope.quarterBtnDisabled = [false, false, false, false]

          if not scope.ngModel
            scope.ngModel =
              year = curYear
          scope.nextBtnDisabled = false
          scope.quarters = ['q1','q2','q3','q4']
          scope.pickerShown = false
          quarterVal = scope.ngModel.quarter
          scope.quarterVal = if quarterVal then "uhkklp_year_q#{quarterVal}" else ''

          checkQuarter = (idx) ->
            i = 0
            while i < 4
              scope.quarterBtnDisabled[i] = if i < idx then false else true
              i++

          bindGlobalQuarterEvents = (scope) ->
            $(document).on('mousedown', (e) ->
              $quarterPicker = $(QUARTER_PICKER_SELECTOR + ':visible')
              if $quarterPicker.length and not $(e.target).closest(QUARTER_PICKER_SELECTOR).length and not $(e.target).hasClass('quarter-picker-value')
                scope.$apply( ->
                  scope.pickerShown = false
                )
            )

          scope.togglePicker = ->
            scope.pickerShown = not scope.pickerShown
            # Workaround for the extra text generated by the datetimepicker plugin
            if scope.pickerShown
              firstNode = elem.find(QUARTER_PICKER_SELECTOR)[0].childNodes[0]
              firstNode.remove() if firstNode.nodeType is TEXT_NODE_TYPE

          scope.changeYear = (step) ->
            if (scope.ngModel.year + step) <= maxYear
              scope.ngModel.year += step
              scope.changeHandler() if scope.changeHandler
              scope.nextBtnDisabled = false
              idx2 = if scope.ngModel.year is maxYear then quarterVal else 4
              checkQuarter(idx2)
              if scope.ngModel.quarter > quarterVal and scope.ngModel.year is maxYear
                scope.ngModel.quarter = quarterVal
                scope.changeHandler() if scope.changeHandler
                scope.quarterVal = "uhkklp_year_q#{quarterVal}"
            else
              scope.nextBtnDisabled = true

          scope.selectQuarter = (idx) ->
            if not scope.quarterBtnDisabled[idx - 1]
              scope.ngModel.quarter = idx
              scope.changeHandler() if scope.changeHandler
              scope.quarterVal = "uhkklp_year_q#{idx}"
              scope.pickerShown = false

          bindGlobalQuarterEvents(scope)
          checkQuarter(quarterVal)

          return
    )
  ]
